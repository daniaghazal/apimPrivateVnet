{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string"
    },
    "vnetAddressSpace": {
      "type": "string"
    },
    "appgwSubnet": {
      "type": "string"
    },
    "apimSubnet": {
      "type": "string"
    },
    "jumpboxSubnet": {
      "type": "string"
    },
    "webServerSubnet": {
      "type": "string"
    },
    "gwSubnet": {
      "type": "string"
    },
    "vaultName": {
      "type": "string"
    },
    "apiHostname": {
      "type": "string"
    },
    "secretName": {
      "type": "string"
    },
    "onpremVnetAddressSpace": {
      "type": "string"
    },
    "onpremGatewayAddressSpace": {
      "type": "string"
    },
    "onpremWebAddressSpace": {
      "type": "string"
    },
    "publisherName": {
      "type": "string"
    },
    "publisherEmail": {
      "type": "string"
    },
    "adminUsernameSql": {
      "type": "secureString"
    },
    "adminPasswordSql": {
      "type": "secureString"
    },
    "hostname": {
      "type": "string"
    },
    "adminUsername": {
      "type": "secureString"
    },
    "adminPassword": {
      "type": "secureString"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressSpace": {
            "value": "[parameters('vnetAddressSpace')]"
          },
          "appgwSubnet": {
            "value": "[parameters('appgwSubnet')]"
          },
          "apimSubnet": {
            "value": "[parameters('apimSubnet')]"
          },
          "jumpboxSubnet": {
            "value": "[parameters('jumpboxSubnet')]"
          },
          "webServerSubnet": {
            "value": "[parameters('webServerSubnet')]"
          },
          "gwSubnet": {
            "value": "[parameters('gwSubnet')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "vnetAddressSpace": {
              "type": "string"
            },
            "appgwSubnet": {
              "type": "string"
            },
            "apimSubnet": {
              "type": "string"
            },
            "jumpboxSubnet": {
              "type": "string"
            },
            "webServerSubnet": {
              "type": "string"
            },
            "gwSubnet": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]",
            "appgwSubnetName": "appgwSubnet",
            "apimSubnetName": "apimSubnet",
            "jumpboxSubnetName": "jumpboxSubnet",
            "webServerSubnetName": "webWorkloadSubnet",
            "gwSubnetName": "gatewaySubnet"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[parameters('vnetName')]",
              "location": "[variables('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressSpace')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('appgwSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('appgwSubnet')]"
                    }
                  },
                  {
                    "name": "[variables('apimSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('apimSubnet')]"
                    }
                  },
                  {
                    "name": "[variables('jumpboxSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('jumpboxSubnet')]"
                    }
                  },
                  {
                    "name": "[variables('webServerSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('webServerSubnet')]",
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.Sql"
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('gwSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('gwSubnet')]"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "vnetname": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "webServerSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[3].id]"
            },
            "subnetJumpbox": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[2].id]"
            },
            "subnetApim": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[1].id]"
            },
            "subnetAppGw": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[0].id]"
            },
            "subnetGw": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[4].id]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vpn",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "name": {
            "value": "[concat('vpn-cloud-', uniqueString(resourceGroup().id))]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.subnetGw.value]"
          },
          "publicIpName": {
            "value": "pip-gw-cloud"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "publicIpName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "sku": "VpnGw1",
            "gatewayType": "Vpn",
            "vpnGatewayGeneration": "Generation1",
            "vpnType": "RouteBased"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2019-02-01",
              "name": "[parameters('publicIpName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Dynamic"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworkGateways",
              "apiVersion": "2019-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "gatewayType": "[variables('gatewayType')]",
                "ipConfigurations": [
                  {
                    "name": "default",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
                      }
                    }
                  }
                ],
                "vpnType": "[variables('vpnType')]",
                "vpnGatewayGeneration": "[variables('vpnGatewayGeneration')]",
                "sku": {
                  "name": "[variables('sku')]",
                  "tier": "[variables('sku')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "web",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "functions": [],
          "variables": {
            "suffix": "[uniqueString(resourceGroup().id)]",
            "appServiceApiName": "[concat('appsrvapi', variables('suffix'))]",
            "appServiceWebName": "[concat('appsrvweb', variables('suffix'))]",
            "location": "[resourceGroup().location]",
            "webapiName": "[concat('todoapi-', variables('suffix'))]",
            "webAppWeb": "[concat('todoweb-', variables('suffix'))]",
            "wcfApp": "[concat('wcfapp-', variables('suffix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2019-08-01",
              "name": "[variables('appServiceApiName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "S1",
                "capacity": 1
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2019-08-01",
              "name": "[variables('appServiceWebName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "S1",
                "capacity": 1
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2019-08-01",
              "name": "[variables('webapiName')]",
              "location": "[variables('location')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServiceApiName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServiceApiName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2019-08-01",
              "name": "[variables('webAppWeb')]",
              "location": "[variables('location')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServiceWebName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServiceWebName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2019-08-01",
              "name": "[variables('wcfApp')]",
              "location": "[variables('location')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServiceWebName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServiceWebName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "sql",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsernameSql')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPasswordSql')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.webServerSubnetId.value]"
          },
          "vnetName": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.vnetname.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "adminUsername": {
              "type": "secureString"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "vnetName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "suffix": "[uniqueString(resourceGroup().id)]",
            "name": "[concat('sqlserver-', variables('suffix'))]",
            "dbname": "tododb",
            "location": "[resourceGroup().location]"
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2019-06-01-preview",
              "name": "[variables('name')]",
              "location": "[variables('location')]",
              "properties": {
                "administratorLogin": "[parameters('adminUsername')]",
                "administratorLoginPassword": "[parameters('adminPassword')]"
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2019-06-01-preview",
              "name": "[concat(variables('name'), '/', variables('dbname'))]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Basic",
                "tier": "Basic"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('name'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/virtualNetworkRules",
              "apiVersion": "2015-05-01-preview",
              "name": "[concat(variables('name'), '/', parameters('vnetName'))]",
              "properties": {
                "virtualNetworkSubnetId": "[parameters('subnetId')]",
                "ignoreMissingVnetServiceEndpoint": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('name'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "apim",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "publisherName": {
            "value": "[parameters('publisherName')]"
          },
          "publisherEmail": {
            "value": "[parameters('publisherEmail')]"
          },
          "subnetResourceId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.subnetApim.value]"
          },
          "apiHostname": {
            "value": "[parameters('apiHostname')]"
          },
          "keyVaultName": {
            "value": "[parameters('vaultName')]"
          },
          "secretName": {
            "value": "[parameters('secretName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "publisherName": {
              "type": "string"
            },
            "publisherEmail": {
              "type": "string"
            },
            "subnetResourceId": {
              "type": "string"
            },
            "apiHostname": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "secretName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "suffix": "[uniqueString(resourceGroup().id)]",
            "apimName": "[concat('apim-', variables('suffix'))]",
            "location": "[resourceGroup().location]"
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2019-12-01",
              "name": "[variables('apimName')]",
              "location": "[variables('location')]",
              "properties": {
                "virtualNetworkConfiguration": {
                  "subnetResourceId": "[parameters('subnetResourceId')]"
                },
                "virtualNetworkType": "Internal",
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "Developer",
                "capacity": 1
              }
            }
          ],
          "outputs": {
            "apimIdentity": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', variables('apimName')), '2019-12-01', 'full').identity.principalId]"
            },
            "apimhostname": {
              "type": "string",
              "value": "[concat(variables('apimName'), '.net')]"
            },
            "apimPrivateIp": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', variables('apimName'))).privateIPAddresses[0]]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "dns",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dnsZoneName": {
            "value": "[parameters('hostname')]"
          },
          "apimIpAddress": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'apim'), '2019-10-01').outputs.apimPrivateIp.value]"
          },
          "vnetId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.vnetId.value]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "dnsZoneName": {
              "type": "string"
            },
            "apimIpAddress": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2018-09-01",
              "name": "[parameters('dnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/SOA",
              "apiVersion": "2018-09-01",
              "name": "[concat(parameters('dnsZoneName'), '/@')]",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2018-09-01",
              "name": "[concat(parameters('dnsZoneName'), '/', parameters('vnetName'))]",
              "location": "global",
              "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('dnsZoneName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'apim')]",
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "jumpbox",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.subnetJumpbox.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "subnetId": {
              "type": "string"
            },
            "adminUsername": {
              "type": "secureString"
            },
            "adminPassword": {
              "type": "secureString"
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "jumpboxpip",
              "location": "[variables('location')]",
              "properties": {
                "publicIPAllocationMethod": "Dynamic"
              },
              "sku": {
                "name": "Basic"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-06-01",
              "name": "jumpnic",
              "location": "[variables('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'jumpboxpip')]"
                      },
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'jumpboxpip')]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2020-06-01",
              "name": "jumpbox",
              "location": "[variables('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B1ms"
                },
                "osProfile": {
                  "computerName": "jumpbox",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": false
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "18.04-LTS",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', 'jumpnic')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', 'jumpnic')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', 'jumpboxpip')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network')]"
      ]
    }
  ],
  "outputs": {
    "gwSubnetId": {
      "type": "string",
      "value": "[reference(extensionResourceId(resourceGroup().id, 'Microsoft.Resources/deployments', 'network'), '2019-10-01').outputs.subnetAppGw.value]"
    },
    "apimSubnetCIDR": {
      "type": "string",
      "value": "[parameters('apimSubnet')]"
    },
    "identityId": {
      "type": "string",
      "value": "test"
    }
  }
}